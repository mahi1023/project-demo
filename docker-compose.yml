# version: '3'

# services:
#   # PostgreSQL for Course Service
#   postgres-course:
#     image: postgres:latest
#     container_name: postgres-course
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: learning
#     ports:
#       - "5433:5432"
#     networks:
#       - app-network

#   # PostgreSQL for Enrollment Service
#   postgres-enrollment:
#     image: postgres:latest
#     container_name: postgres-enrollment
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: learning
#     ports:
#       - "5434:5432"
#     networks:
#       - app-network

#   # Kafka Service
#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "9093:9093"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: INSIDE_KAFKA:9093
#       KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     networks:
#       - app-network

#   # Zookeeper Service (Required by Kafka)
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#     ports:
#       - "2181:2181"
#     networks:
#       - app-network

#   # Course Service
#   course-service:
#     image: course-service
#     container_name: course-service
#     environment:
#       SPRING_PROFILES_ACTIVE: docker
#       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-course:5432/learning
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
#     ports:
#       - "8080:8080"
#     depends_on:
#       - postgres-course
#       - kafka
#     networks:
#       - app-network

#   # Enrollment Service
#   enrollement-service:
#     image: enrollement-service
#     container_name: enrollement-service
#     environment:
#       SPRING_PROFILES_ACTIVE: docker
#       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-enrollment:5432/learning
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
#     ports:
#       - "8081:8081"
#     depends_on:
#       - postgres-enrollment
#       - kafka
#     networks:
#       - app-network

#   # Schema Registry (Optional, for Kafka Avro schema)
#   schema-registry:
#     image: confluentinc/cp-schema-registry:latest
#     container_name: schema-registry
#     depends_on:
#       - kafka
#     ports:
#       - "8081:8081"
#     environment:
#       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
#       SCHEMA_REGISTRY_HOST_NAME: schema-registry
#     networks:
#       - app-network

# networks:
#   app-network:
#     driver: bridge

# version: '3.8'
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:latest
#     container_name: zookeeper
#     restart: always
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - "2181:2181"

#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     restart: always
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#   postgres-course:
#     image: postgres:latest
#     container_name: postgres-course
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: learning
#     ports:
#       - "5432:5432"
#     networks:
#       - app-network    
#   course-service:
#     image: course-service  
#     container_name: course-service
#     environment:
#       SPRING_PROFILES_ACTIVE: docker
#       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-course:5432/learning
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#     ports:
#       - "8080:8080"
#     depends_on:
#       - postgres-course
#       - kafka
#     networks:
#       - app-network
# networks:
#   app-network:
#     driver: bridge


version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  postgres-course:
    image: postgres:latest
    container_name: postgres-course
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: learning
    ports:
      - "5432:5432"
    networks:
      - app-network    

  course-service:
    build:
      context: ./course-service   
      dockerfile: Dockerfile     
    container_name: course-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-course:5432/learning
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - postgres-course
      - kafka
    networks:
      - app-network
      
  enrollement-service:
    build:
     context: ./enrollement-service   
     dockerfile: Dockerfile  
    container_name: enrollement-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-course:5432/learning
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    depends_on:
      - postgres-course
      - kafka
    restart: always
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
